@page "/bots/{id}";
@using Shares.Model;
@using Shares.Enum;
@using Services;
@using ValCavalluBot.wwwroot.Components;
@using ValCavalluBot.Classes;
@inject NavigationManager NavigationManager;
@inject ISettingsService SettingsService;
@inject IBotManagerService BotManagerService;
@inject IGRPCService GRPCService;





<link rel="stylesheet" href="/css/site.css" />

<h3>Bot Einstellungen (@Id)</h3>
<div class="row mt-3 mb-3">
    <div class="col-md">
        <label class="font-weight-bold">Howrse Benutzername</label>
        <input class="form-control" @bind-value="Bot.Settings.Credentials.HowrseUsername" />
    </div>
    <div class="col-md">
        <label class="font-weight-bold">Howrse Password</label>
        <input type="password" class="form-control" @bind-value="Bot.Settings.Credentials.HowrsePassword" />
    </div>
    <div class="col-md">
        <label class="font-weight-bold">Howrse Server</label>
        <input class="form-control" @bind-value="Bot.Settings.Server" />
    </div>
</div>
<hr />
<div class="row mt-3 mb-3">
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/Farm/SVG/5996 - Wheat.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Food.PerformFoodAction" />
    </div>
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/Grooming/SVG/Hydrotherapy.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Drink.PerformDrinkAction" />
    </div>
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/HorseRacing/SVG/12.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Stroke.PerformStrokeAction" />
    </div>
</div>
<div class="row mt-3 mb-3">
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/Grooming/SVG/Pet Brush.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Groom.PerformGroomAction" />
    </div>
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/Farm/SVG/5992 - Vegetables.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Carrot.PerformCarrotAction" />
    </div>
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/Energy/SVG/flash.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Mash.PerformMashAction" />
    </div>
</div>
<div class="row mt-3 mb-3">
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/Sleep/SVG/CLOUD AND MOON.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Sleep.PerformSleepAction" />
    </div>
    <div class="col-md d-flex justify-content-center mt-2 mb-2">
        <img src="/ICON/Aging/SVG/Lineal Color/Color_20.svg" class="actionImage" />
        <input class="form-check-input align-bottom" type="checkbox" @bind="@Bot.Settings.Actions.Age.PerformAgingAction" />
    </div>
    <div class="col-md d-flex justify-content-center mt-2 mb-2">

    </div>
</div>
<hr />
<div class="row d-flex justify-content-center mb-2">
    <div class="input-group rounded col-md-3">
        <input type="search" class="form-control rounded" placeholder="Zucht Name" aria-label="Search"
               aria-describedby="search-addon" />
        <span class="input-group-text border-0 ml-1" id="search-addon">
            Suchen
        </span>
    </div>
</div>
<div class="row">
    <div class="col">
        @if (Bot.Settings.Breedings.Count == 0)
        {
            <div class="d-flex justify-content-center mt-2">
                <div class="spinner-grow text-warning" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-warning" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-warning" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        }
        <HowrseBreedingsList Breedings="Bot.Settings.Breedings"></HowrseBreedingsList>
    </div>
</div>
<div class="row mt-3 mb-3">
    <div class="col">
        <button class="btn btn-success form-control" @onclick="Save">Speichern</button>
    </div>
    <div class="col">
        <button class="btn btn-danger form-control" @onclick="Cancel">Abbrechen</button>
    </div>
</div>


@code {
    [Parameter]
    public string Id { get; set; }

    private HowrseBotModel Bot { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Bot = BotManagerService.GetBot(Id);
        Bot.Settings.HowrseUserId = "3676376";

        PageFirstRenderHandler.PageFirstRender(base.ToString());

        if (base.ToString().IsFirstRender())
        {
            List<HowrseBreedingModel> breedingsFromServer = await GRPCService.GetBreedings(Bot);
            if (breedingsFromServer.Count > 0)
            {
                Bot.Settings.Breedings = breedingsFromServer;
            }
        }
    }

    private void Save()
    {
        List<HowrseBotModel> bots = BotManagerService.GetBots();

        HowrseBotModel bot = bots.SingleOrDefault(_ => _.Id == Id);
        bot.Settings.ChosenBreedings = Bot.Settings.Breedings.Where(_ => _.Checked).ToList();

        SettingsService.SaveBotSettings(bots.Select(_ => _.Settings).ToList());

        NavigationManager.NavigateTo("/dashboard");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/dashboard");
    }

}
